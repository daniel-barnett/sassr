// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// sass_compile_file
NumericVector sass_compile_file(const char* filename, List options);
RcppExport SEXP _sassr_sass_compile_file(SEXP filenameSEXP, SEXP optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const char* >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(sass_compile_file(filename, options));
    return rcpp_result_gen;
END_RCPP
}
// sass_compile_string
CharacterVector sass_compile_string(std::vector<std::string> strings, List options);
RcppExport SEXP _sassr_sass_compile_string(SEXP stringsSEXP, SEXP optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type strings(stringsSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(sass_compile_string(strings, options));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sassr_sass_compile_file", (DL_FUNC) &_sassr_sass_compile_file, 2},
    {"_sassr_sass_compile_string", (DL_FUNC) &_sassr_sass_compile_string, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_sassr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
